name: Deploy to Cloud Run

on:
  push:
    branches: [ main, master ]  # Ana dallar üzerinde değişiklik olduğunda

jobs:
  deploy-all-hotels:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        hotel:
          - { name: "Hotel One", db_name: "GreenP", admin_email: "tarikziya.09@icloud.com", service_prefix: "hotel1" }
          - { name: "Hotel Two", db_name: "HotelTwo", admin_email: "nihat.saydam@icloud.com", service_prefix: "hotel2" }
          - { name: "Green Prusa", db_name: "GreenPrusaHotel", admin_email: "nihat.saydam@icloud.com", service_prefix: "greenprusa" }
         
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    
    - name: Install dependencies
      run: npm install
    
    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
        
    - name: Configure Docker for Artifact Registry
      run: |
        # Authenticate Docker with Artifact Registry
        gcloud auth configure-docker europe-west3-docker.pkg.dev
        
    - name: Build and push Docker image
      run: |
        # Docker imajı oluşturun ve push edin
        REGION="europe-west3"
        REPO_NAME="keepsty-docker"
        SERVICE_NAME="${{ matrix.hotel.service_prefix }}-backend"
        IMAGE_PATH="europe-west3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/$REPO_NAME/$SERVICE_NAME:${{ github.sha }}"
        
        docker build -t $IMAGE_PATH .
        docker push $IMAGE_PATH
        
        # İmaj yolunu çıktı olarak saklayalım
        echo "IMAGE_PATH=$IMAGE_PATH" >> $GITHUB_ENV
      
    - name: Deploy to Cloud Run
      run: |
        HOTEL_NAME="${{ matrix.hotel.name }}"
        DB_NAME="${{ matrix.hotel.db_name }}"
        ADMIN_EMAIL="${{ matrix.hotel.admin_email }}"
        SERVICE_NAME="${{ matrix.hotel.service_prefix }}-backend"
        
        echo "Deploying $SERVICE_NAME for hotel: $HOTEL_NAME, DB: $DB_NAME"
        
        gcloud run deploy $SERVICE_NAME \
          --image ${{ env.IMAGE_PATH }} \
          --region europe-west3 \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars="HOTEL_NAME=$HOTEL_NAME,DB_NAME=$DB_NAME,ADMIN_EMAIL=$ADMIN_EMAIL" \
          --project ${{ secrets.GCP_PROJECT_ID }} 